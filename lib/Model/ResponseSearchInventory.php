<?php
/**
 * ResponseSearchInventory
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Distributor PPU Service
 *
 * Â© KnowRoaming LTD 2017
 *
 * OpenAPI spec version: v1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.35
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ResponseSearchInventory Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ResponseSearchInventory implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ResponseSearchInventory';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'inventory_id' => 'int',
'inventory_name' => 'string',
'epoch_created' => 'int',
'epoch_modified' => 'int',
'epoch_deleted' => 'int',
'ocs_group_id' => 'int',
'balance_cent' => 'float',
'balance_currency' => 'string',
'balance_epoch_modified' => 'int',
'overdraft_cent' => 'float',
'overdraft_currency' => 'string',
'overdraft_epoch_modified' => 'int',
'whitelist_id' => 'int',
'whitelist_epoch_created' => 'int',
'whitelist_epoch_modified' => 'int',
'distributor_id' => 'int',
'distributor_name' => 'string',
'profile_stage' => 'string',
'type' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'inventory_id' => 'int32',
'inventory_name' => null,
'epoch_created' => 'int64',
'epoch_modified' => 'int64',
'epoch_deleted' => 'int64',
'ocs_group_id' => 'int32',
'balance_cent' => null,
'balance_currency' => null,
'balance_epoch_modified' => 'int64',
'overdraft_cent' => null,
'overdraft_currency' => null,
'overdraft_epoch_modified' => 'int64',
'whitelist_id' => 'int32',
'whitelist_epoch_created' => 'int64',
'whitelist_epoch_modified' => 'int64',
'distributor_id' => 'int32',
'distributor_name' => null,
'profile_stage' => null,
'type' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'inventory_id' => 'inventory_id',
'inventory_name' => 'inventory_name',
'epoch_created' => 'epoch_created',
'epoch_modified' => 'epoch_modified',
'epoch_deleted' => 'epoch_deleted',
'ocs_group_id' => 'ocs_group_id',
'balance_cent' => 'balance_cent',
'balance_currency' => 'balance_currency',
'balance_epoch_modified' => 'balance_epoch_modified',
'overdraft_cent' => 'overdraft_cent',
'overdraft_currency' => 'overdraft_currency',
'overdraft_epoch_modified' => 'overdraft_epoch_modified',
'whitelist_id' => 'whitelist_id',
'whitelist_epoch_created' => 'whitelist_epoch_created',
'whitelist_epoch_modified' => 'whitelist_epoch_modified',
'distributor_id' => 'distributor_id',
'distributor_name' => 'distributor_name',
'profile_stage' => 'profile_stage',
'type' => 'type'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'inventory_id' => 'setInventoryId',
'inventory_name' => 'setInventoryName',
'epoch_created' => 'setEpochCreated',
'epoch_modified' => 'setEpochModified',
'epoch_deleted' => 'setEpochDeleted',
'ocs_group_id' => 'setOcsGroupId',
'balance_cent' => 'setBalanceCent',
'balance_currency' => 'setBalanceCurrency',
'balance_epoch_modified' => 'setBalanceEpochModified',
'overdraft_cent' => 'setOverdraftCent',
'overdraft_currency' => 'setOverdraftCurrency',
'overdraft_epoch_modified' => 'setOverdraftEpochModified',
'whitelist_id' => 'setWhitelistId',
'whitelist_epoch_created' => 'setWhitelistEpochCreated',
'whitelist_epoch_modified' => 'setWhitelistEpochModified',
'distributor_id' => 'setDistributorId',
'distributor_name' => 'setDistributorName',
'profile_stage' => 'setProfileStage',
'type' => 'setType'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'inventory_id' => 'getInventoryId',
'inventory_name' => 'getInventoryName',
'epoch_created' => 'getEpochCreated',
'epoch_modified' => 'getEpochModified',
'epoch_deleted' => 'getEpochDeleted',
'ocs_group_id' => 'getOcsGroupId',
'balance_cent' => 'getBalanceCent',
'balance_currency' => 'getBalanceCurrency',
'balance_epoch_modified' => 'getBalanceEpochModified',
'overdraft_cent' => 'getOverdraftCent',
'overdraft_currency' => 'getOverdraftCurrency',
'overdraft_epoch_modified' => 'getOverdraftEpochModified',
'whitelist_id' => 'getWhitelistId',
'whitelist_epoch_created' => 'getWhitelistEpochCreated',
'whitelist_epoch_modified' => 'getWhitelistEpochModified',
'distributor_id' => 'getDistributorId',
'distributor_name' => 'getDistributorName',
'profile_stage' => 'getProfileStage',
'type' => 'getType'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['inventory_id'] = isset($data['inventory_id']) ? $data['inventory_id'] : null;
        $this->container['inventory_name'] = isset($data['inventory_name']) ? $data['inventory_name'] : null;
        $this->container['epoch_created'] = isset($data['epoch_created']) ? $data['epoch_created'] : null;
        $this->container['epoch_modified'] = isset($data['epoch_modified']) ? $data['epoch_modified'] : null;
        $this->container['epoch_deleted'] = isset($data['epoch_deleted']) ? $data['epoch_deleted'] : null;
        $this->container['ocs_group_id'] = isset($data['ocs_group_id']) ? $data['ocs_group_id'] : null;
        $this->container['balance_cent'] = isset($data['balance_cent']) ? $data['balance_cent'] : null;
        $this->container['balance_currency'] = isset($data['balance_currency']) ? $data['balance_currency'] : null;
        $this->container['balance_epoch_modified'] = isset($data['balance_epoch_modified']) ? $data['balance_epoch_modified'] : null;
        $this->container['overdraft_cent'] = isset($data['overdraft_cent']) ? $data['overdraft_cent'] : null;
        $this->container['overdraft_currency'] = isset($data['overdraft_currency']) ? $data['overdraft_currency'] : null;
        $this->container['overdraft_epoch_modified'] = isset($data['overdraft_epoch_modified']) ? $data['overdraft_epoch_modified'] : null;
        $this->container['whitelist_id'] = isset($data['whitelist_id']) ? $data['whitelist_id'] : null;
        $this->container['whitelist_epoch_created'] = isset($data['whitelist_epoch_created']) ? $data['whitelist_epoch_created'] : null;
        $this->container['whitelist_epoch_modified'] = isset($data['whitelist_epoch_modified']) ? $data['whitelist_epoch_modified'] : null;
        $this->container['distributor_id'] = isset($data['distributor_id']) ? $data['distributor_id'] : null;
        $this->container['distributor_name'] = isset($data['distributor_name']) ? $data['distributor_name'] : null;
        $this->container['profile_stage'] = isset($data['profile_stage']) ? $data['profile_stage'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets inventory_id
     *
     * @return int
     */
    public function getInventoryId()
    {
        return $this->container['inventory_id'];
    }

    /**
     * Sets inventory_id
     *
     * @param int $inventory_id inventory_id
     *
     * @return $this
     */
    public function setInventoryId($inventory_id)
    {
        $this->container['inventory_id'] = $inventory_id;

        return $this;
    }

    /**
     * Gets inventory_name
     *
     * @return string
     */
    public function getInventoryName()
    {
        return $this->container['inventory_name'];
    }

    /**
     * Sets inventory_name
     *
     * @param string $inventory_name inventory_name
     *
     * @return $this
     */
    public function setInventoryName($inventory_name)
    {
        $this->container['inventory_name'] = $inventory_name;

        return $this;
    }

    /**
     * Gets epoch_created
     *
     * @return int
     */
    public function getEpochCreated()
    {
        return $this->container['epoch_created'];
    }

    /**
     * Sets epoch_created
     *
     * @param int $epoch_created epoch_created
     *
     * @return $this
     */
    public function setEpochCreated($epoch_created)
    {
        $this->container['epoch_created'] = $epoch_created;

        return $this;
    }

    /**
     * Gets epoch_modified
     *
     * @return int
     */
    public function getEpochModified()
    {
        return $this->container['epoch_modified'];
    }

    /**
     * Sets epoch_modified
     *
     * @param int $epoch_modified epoch_modified
     *
     * @return $this
     */
    public function setEpochModified($epoch_modified)
    {
        $this->container['epoch_modified'] = $epoch_modified;

        return $this;
    }

    /**
     * Gets epoch_deleted
     *
     * @return int
     */
    public function getEpochDeleted()
    {
        return $this->container['epoch_deleted'];
    }

    /**
     * Sets epoch_deleted
     *
     * @param int $epoch_deleted epoch_deleted
     *
     * @return $this
     */
    public function setEpochDeleted($epoch_deleted)
    {
        $this->container['epoch_deleted'] = $epoch_deleted;

        return $this;
    }

    /**
     * Gets ocs_group_id
     *
     * @return int
     */
    public function getOcsGroupId()
    {
        return $this->container['ocs_group_id'];
    }

    /**
     * Sets ocs_group_id
     *
     * @param int $ocs_group_id ocs_group_id
     *
     * @return $this
     */
    public function setOcsGroupId($ocs_group_id)
    {
        $this->container['ocs_group_id'] = $ocs_group_id;

        return $this;
    }

    /**
     * Gets balance_cent
     *
     * @return float
     */
    public function getBalanceCent()
    {
        return $this->container['balance_cent'];
    }

    /**
     * Sets balance_cent
     *
     * @param float $balance_cent balance_cent
     *
     * @return $this
     */
    public function setBalanceCent($balance_cent)
    {
        $this->container['balance_cent'] = $balance_cent;

        return $this;
    }

    /**
     * Gets balance_currency
     *
     * @return string
     */
    public function getBalanceCurrency()
    {
        return $this->container['balance_currency'];
    }

    /**
     * Sets balance_currency
     *
     * @param string $balance_currency balance_currency
     *
     * @return $this
     */
    public function setBalanceCurrency($balance_currency)
    {
        $this->container['balance_currency'] = $balance_currency;

        return $this;
    }

    /**
     * Gets balance_epoch_modified
     *
     * @return int
     */
    public function getBalanceEpochModified()
    {
        return $this->container['balance_epoch_modified'];
    }

    /**
     * Sets balance_epoch_modified
     *
     * @param int $balance_epoch_modified balance_epoch_modified
     *
     * @return $this
     */
    public function setBalanceEpochModified($balance_epoch_modified)
    {
        $this->container['balance_epoch_modified'] = $balance_epoch_modified;

        return $this;
    }

    /**
     * Gets overdraft_cent
     *
     * @return float
     */
    public function getOverdraftCent()
    {
        return $this->container['overdraft_cent'];
    }

    /**
     * Sets overdraft_cent
     *
     * @param float $overdraft_cent overdraft_cent
     *
     * @return $this
     */
    public function setOverdraftCent($overdraft_cent)
    {
        $this->container['overdraft_cent'] = $overdraft_cent;

        return $this;
    }

    /**
     * Gets overdraft_currency
     *
     * @return string
     */
    public function getOverdraftCurrency()
    {
        return $this->container['overdraft_currency'];
    }

    /**
     * Sets overdraft_currency
     *
     * @param string $overdraft_currency overdraft_currency
     *
     * @return $this
     */
    public function setOverdraftCurrency($overdraft_currency)
    {
        $this->container['overdraft_currency'] = $overdraft_currency;

        return $this;
    }

    /**
     * Gets overdraft_epoch_modified
     *
     * @return int
     */
    public function getOverdraftEpochModified()
    {
        return $this->container['overdraft_epoch_modified'];
    }

    /**
     * Sets overdraft_epoch_modified
     *
     * @param int $overdraft_epoch_modified overdraft_epoch_modified
     *
     * @return $this
     */
    public function setOverdraftEpochModified($overdraft_epoch_modified)
    {
        $this->container['overdraft_epoch_modified'] = $overdraft_epoch_modified;

        return $this;
    }

    /**
     * Gets whitelist_id
     *
     * @return int
     */
    public function getWhitelistId()
    {
        return $this->container['whitelist_id'];
    }

    /**
     * Sets whitelist_id
     *
     * @param int $whitelist_id whitelist_id
     *
     * @return $this
     */
    public function setWhitelistId($whitelist_id)
    {
        $this->container['whitelist_id'] = $whitelist_id;

        return $this;
    }

    /**
     * Gets whitelist_epoch_created
     *
     * @return int
     */
    public function getWhitelistEpochCreated()
    {
        return $this->container['whitelist_epoch_created'];
    }

    /**
     * Sets whitelist_epoch_created
     *
     * @param int $whitelist_epoch_created whitelist_epoch_created
     *
     * @return $this
     */
    public function setWhitelistEpochCreated($whitelist_epoch_created)
    {
        $this->container['whitelist_epoch_created'] = $whitelist_epoch_created;

        return $this;
    }

    /**
     * Gets whitelist_epoch_modified
     *
     * @return int
     */
    public function getWhitelistEpochModified()
    {
        return $this->container['whitelist_epoch_modified'];
    }

    /**
     * Sets whitelist_epoch_modified
     *
     * @param int $whitelist_epoch_modified whitelist_epoch_modified
     *
     * @return $this
     */
    public function setWhitelistEpochModified($whitelist_epoch_modified)
    {
        $this->container['whitelist_epoch_modified'] = $whitelist_epoch_modified;

        return $this;
    }

    /**
     * Gets distributor_id
     *
     * @return int
     */
    public function getDistributorId()
    {
        return $this->container['distributor_id'];
    }

    /**
     * Sets distributor_id
     *
     * @param int $distributor_id distributor_id
     *
     * @return $this
     */
    public function setDistributorId($distributor_id)
    {
        $this->container['distributor_id'] = $distributor_id;

        return $this;
    }

    /**
     * Gets distributor_name
     *
     * @return string
     */
    public function getDistributorName()
    {
        return $this->container['distributor_name'];
    }

    /**
     * Sets distributor_name
     *
     * @param string $distributor_name distributor_name
     *
     * @return $this
     */
    public function setDistributorName($distributor_name)
    {
        $this->container['distributor_name'] = $distributor_name;

        return $this;
    }

    /**
     * Gets profile_stage
     *
     * @return string
     */
    public function getProfileStage()
    {
        return $this->container['profile_stage'];
    }

    /**
     * Sets profile_stage
     *
     * @param string $profile_stage profile_stage
     *
     * @return $this
     */
    public function setProfileStage($profile_stage)
    {
        $this->container['profile_stage'] = $profile_stage;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
