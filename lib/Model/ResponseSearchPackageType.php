<?php
/**
 * ResponseSearchPackageType
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Distributor PPU Service
 *
 * Â© KnowRoaming LTD 2017
 *
 * OpenAPI spec version: v1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.35
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ResponseSearchPackageType Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ResponseSearchPackageType implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ResponseSearchPackageType';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'package_type_id' => 'int',
'name' => 'string',
'supported_countries' => 'string',
'preferred_imsi_id' => 'int',
'voice_usage_allowance_in_seconds' => 'int',
'data_usage_allowance_in_bytes' => 'int',
'sms_usage_allowance_in_nums' => 'int',
'time_allowance_in_seconds' => 'int',
'epoch_earliest_activation' => 'int',
'activation_time_allowance_in_seconds' => 'int',
'activation_type' => 'string',
'epoch_earliest_available' => 'int',
'epoch_latest_available' => 'int',
'notes' => 'string',
'data_usage_allowance_type' => 'string',
'voice_usage_allowance_type' => 'string',
'sms_usage_allowance_type' => 'string',
'epoch_created' => 'int',
'epoch_modified' => 'int',
'traffic_policy_id' => 'int',
'network_plan_id' => 'int',
'description' => 'string',
'distributor_ids' => 'int[]',
'inventory_ids' => 'int[]',
'epoch_max_modified' => 'int',
'time_allowance_duration' => 'int',
'time_allowance_unit' => 'string',
'status' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'package_type_id' => 'int32',
'name' => null,
'supported_countries' => null,
'preferred_imsi_id' => 'int32',
'voice_usage_allowance_in_seconds' => 'int32',
'data_usage_allowance_in_bytes' => 'int64',
'sms_usage_allowance_in_nums' => 'int32',
'time_allowance_in_seconds' => 'int32',
'epoch_earliest_activation' => 'int64',
'activation_time_allowance_in_seconds' => 'int32',
'activation_type' => null,
'epoch_earliest_available' => 'int64',
'epoch_latest_available' => 'int64',
'notes' => null,
'data_usage_allowance_type' => null,
'voice_usage_allowance_type' => null,
'sms_usage_allowance_type' => null,
'epoch_created' => 'int64',
'epoch_modified' => 'int64',
'traffic_policy_id' => 'int32',
'network_plan_id' => 'int32',
'description' => null,
'distributor_ids' => 'int32',
'inventory_ids' => 'int32',
'epoch_max_modified' => 'int64',
'time_allowance_duration' => 'int32',
'time_allowance_unit' => null,
'status' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'package_type_id' => 'package_type_id',
'name' => 'name',
'supported_countries' => 'supported_countries',
'preferred_imsi_id' => 'preferred_imsi_id',
'voice_usage_allowance_in_seconds' => 'voice_usage_allowance_in_seconds',
'data_usage_allowance_in_bytes' => 'data_usage_allowance_in_bytes',
'sms_usage_allowance_in_nums' => 'sms_usage_allowance_in_nums',
'time_allowance_in_seconds' => 'time_allowance_in_seconds',
'epoch_earliest_activation' => 'epoch_earliest_activation',
'activation_time_allowance_in_seconds' => 'activation_time_allowance_in_seconds',
'activation_type' => 'activation_type',
'epoch_earliest_available' => 'epoch_earliest_available',
'epoch_latest_available' => 'epoch_latest_available',
'notes' => 'notes',
'data_usage_allowance_type' => 'data_usage_allowance_type',
'voice_usage_allowance_type' => 'voice_usage_allowance_type',
'sms_usage_allowance_type' => 'sms_usage_allowance_type',
'epoch_created' => 'epoch_created',
'epoch_modified' => 'epoch_modified',
'traffic_policy_id' => 'traffic_policy_id',
'network_plan_id' => 'network_plan_id',
'description' => 'description',
'distributor_ids' => 'distributor_ids',
'inventory_ids' => 'inventory_ids',
'epoch_max_modified' => 'epoch_max_modified',
'time_allowance_duration' => 'time_allowance_duration',
'time_allowance_unit' => 'time_allowance_unit',
'status' => 'status'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'package_type_id' => 'setPackageTypeId',
'name' => 'setName',
'supported_countries' => 'setSupportedCountries',
'preferred_imsi_id' => 'setPreferredImsiId',
'voice_usage_allowance_in_seconds' => 'setVoiceUsageAllowanceInSeconds',
'data_usage_allowance_in_bytes' => 'setDataUsageAllowanceInBytes',
'sms_usage_allowance_in_nums' => 'setSmsUsageAllowanceInNums',
'time_allowance_in_seconds' => 'setTimeAllowanceInSeconds',
'epoch_earliest_activation' => 'setEpochEarliestActivation',
'activation_time_allowance_in_seconds' => 'setActivationTimeAllowanceInSeconds',
'activation_type' => 'setActivationType',
'epoch_earliest_available' => 'setEpochEarliestAvailable',
'epoch_latest_available' => 'setEpochLatestAvailable',
'notes' => 'setNotes',
'data_usage_allowance_type' => 'setDataUsageAllowanceType',
'voice_usage_allowance_type' => 'setVoiceUsageAllowanceType',
'sms_usage_allowance_type' => 'setSmsUsageAllowanceType',
'epoch_created' => 'setEpochCreated',
'epoch_modified' => 'setEpochModified',
'traffic_policy_id' => 'setTrafficPolicyId',
'network_plan_id' => 'setNetworkPlanId',
'description' => 'setDescription',
'distributor_ids' => 'setDistributorIds',
'inventory_ids' => 'setInventoryIds',
'epoch_max_modified' => 'setEpochMaxModified',
'time_allowance_duration' => 'setTimeAllowanceDuration',
'time_allowance_unit' => 'setTimeAllowanceUnit',
'status' => 'setStatus'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'package_type_id' => 'getPackageTypeId',
'name' => 'getName',
'supported_countries' => 'getSupportedCountries',
'preferred_imsi_id' => 'getPreferredImsiId',
'voice_usage_allowance_in_seconds' => 'getVoiceUsageAllowanceInSeconds',
'data_usage_allowance_in_bytes' => 'getDataUsageAllowanceInBytes',
'sms_usage_allowance_in_nums' => 'getSmsUsageAllowanceInNums',
'time_allowance_in_seconds' => 'getTimeAllowanceInSeconds',
'epoch_earliest_activation' => 'getEpochEarliestActivation',
'activation_time_allowance_in_seconds' => 'getActivationTimeAllowanceInSeconds',
'activation_type' => 'getActivationType',
'epoch_earliest_available' => 'getEpochEarliestAvailable',
'epoch_latest_available' => 'getEpochLatestAvailable',
'notes' => 'getNotes',
'data_usage_allowance_type' => 'getDataUsageAllowanceType',
'voice_usage_allowance_type' => 'getVoiceUsageAllowanceType',
'sms_usage_allowance_type' => 'getSmsUsageAllowanceType',
'epoch_created' => 'getEpochCreated',
'epoch_modified' => 'getEpochModified',
'traffic_policy_id' => 'getTrafficPolicyId',
'network_plan_id' => 'getNetworkPlanId',
'description' => 'getDescription',
'distributor_ids' => 'getDistributorIds',
'inventory_ids' => 'getInventoryIds',
'epoch_max_modified' => 'getEpochMaxModified',
'time_allowance_duration' => 'getTimeAllowanceDuration',
'time_allowance_unit' => 'getTimeAllowanceUnit',
'status' => 'getStatus'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['package_type_id'] = isset($data['package_type_id']) ? $data['package_type_id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['supported_countries'] = isset($data['supported_countries']) ? $data['supported_countries'] : null;
        $this->container['preferred_imsi_id'] = isset($data['preferred_imsi_id']) ? $data['preferred_imsi_id'] : null;
        $this->container['voice_usage_allowance_in_seconds'] = isset($data['voice_usage_allowance_in_seconds']) ? $data['voice_usage_allowance_in_seconds'] : null;
        $this->container['data_usage_allowance_in_bytes'] = isset($data['data_usage_allowance_in_bytes']) ? $data['data_usage_allowance_in_bytes'] : null;
        $this->container['sms_usage_allowance_in_nums'] = isset($data['sms_usage_allowance_in_nums']) ? $data['sms_usage_allowance_in_nums'] : null;
        $this->container['time_allowance_in_seconds'] = isset($data['time_allowance_in_seconds']) ? $data['time_allowance_in_seconds'] : null;
        $this->container['epoch_earliest_activation'] = isset($data['epoch_earliest_activation']) ? $data['epoch_earliest_activation'] : null;
        $this->container['activation_time_allowance_in_seconds'] = isset($data['activation_time_allowance_in_seconds']) ? $data['activation_time_allowance_in_seconds'] : null;
        $this->container['activation_type'] = isset($data['activation_type']) ? $data['activation_type'] : null;
        $this->container['epoch_earliest_available'] = isset($data['epoch_earliest_available']) ? $data['epoch_earliest_available'] : null;
        $this->container['epoch_latest_available'] = isset($data['epoch_latest_available']) ? $data['epoch_latest_available'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['data_usage_allowance_type'] = isset($data['data_usage_allowance_type']) ? $data['data_usage_allowance_type'] : null;
        $this->container['voice_usage_allowance_type'] = isset($data['voice_usage_allowance_type']) ? $data['voice_usage_allowance_type'] : null;
        $this->container['sms_usage_allowance_type'] = isset($data['sms_usage_allowance_type']) ? $data['sms_usage_allowance_type'] : null;
        $this->container['epoch_created'] = isset($data['epoch_created']) ? $data['epoch_created'] : null;
        $this->container['epoch_modified'] = isset($data['epoch_modified']) ? $data['epoch_modified'] : null;
        $this->container['traffic_policy_id'] = isset($data['traffic_policy_id']) ? $data['traffic_policy_id'] : null;
        $this->container['network_plan_id'] = isset($data['network_plan_id']) ? $data['network_plan_id'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['distributor_ids'] = isset($data['distributor_ids']) ? $data['distributor_ids'] : null;
        $this->container['inventory_ids'] = isset($data['inventory_ids']) ? $data['inventory_ids'] : null;
        $this->container['epoch_max_modified'] = isset($data['epoch_max_modified']) ? $data['epoch_max_modified'] : null;
        $this->container['time_allowance_duration'] = isset($data['time_allowance_duration']) ? $data['time_allowance_duration'] : null;
        $this->container['time_allowance_unit'] = isset($data['time_allowance_unit']) ? $data['time_allowance_unit'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets package_type_id
     *
     * @return int
     */
    public function getPackageTypeId()
    {
        return $this->container['package_type_id'];
    }

    /**
     * Sets package_type_id
     *
     * @param int $package_type_id package_type_id
     *
     * @return $this
     */
    public function setPackageTypeId($package_type_id)
    {
        $this->container['package_type_id'] = $package_type_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets supported_countries
     *
     * @return string
     */
    public function getSupportedCountries()
    {
        return $this->container['supported_countries'];
    }

    /**
     * Sets supported_countries
     *
     * @param string $supported_countries supported_countries
     *
     * @return $this
     */
    public function setSupportedCountries($supported_countries)
    {
        $this->container['supported_countries'] = $supported_countries;

        return $this;
    }

    /**
     * Gets preferred_imsi_id
     *
     * @return int
     */
    public function getPreferredImsiId()
    {
        return $this->container['preferred_imsi_id'];
    }

    /**
     * Sets preferred_imsi_id
     *
     * @param int $preferred_imsi_id preferred_imsi_id
     *
     * @return $this
     */
    public function setPreferredImsiId($preferred_imsi_id)
    {
        $this->container['preferred_imsi_id'] = $preferred_imsi_id;

        return $this;
    }

    /**
     * Gets voice_usage_allowance_in_seconds
     *
     * @return int
     */
    public function getVoiceUsageAllowanceInSeconds()
    {
        return $this->container['voice_usage_allowance_in_seconds'];
    }

    /**
     * Sets voice_usage_allowance_in_seconds
     *
     * @param int $voice_usage_allowance_in_seconds voice_usage_allowance_in_seconds
     *
     * @return $this
     */
    public function setVoiceUsageAllowanceInSeconds($voice_usage_allowance_in_seconds)
    {
        $this->container['voice_usage_allowance_in_seconds'] = $voice_usage_allowance_in_seconds;

        return $this;
    }

    /**
     * Gets data_usage_allowance_in_bytes
     *
     * @return int
     */
    public function getDataUsageAllowanceInBytes()
    {
        return $this->container['data_usage_allowance_in_bytes'];
    }

    /**
     * Sets data_usage_allowance_in_bytes
     *
     * @param int $data_usage_allowance_in_bytes data_usage_allowance_in_bytes
     *
     * @return $this
     */
    public function setDataUsageAllowanceInBytes($data_usage_allowance_in_bytes)
    {
        $this->container['data_usage_allowance_in_bytes'] = $data_usage_allowance_in_bytes;

        return $this;
    }

    /**
     * Gets sms_usage_allowance_in_nums
     *
     * @return int
     */
    public function getSmsUsageAllowanceInNums()
    {
        return $this->container['sms_usage_allowance_in_nums'];
    }

    /**
     * Sets sms_usage_allowance_in_nums
     *
     * @param int $sms_usage_allowance_in_nums sms_usage_allowance_in_nums
     *
     * @return $this
     */
    public function setSmsUsageAllowanceInNums($sms_usage_allowance_in_nums)
    {
        $this->container['sms_usage_allowance_in_nums'] = $sms_usage_allowance_in_nums;

        return $this;
    }

    /**
     * Gets time_allowance_in_seconds
     *
     * @return int
     */
    public function getTimeAllowanceInSeconds()
    {
        return $this->container['time_allowance_in_seconds'];
    }

    /**
     * Sets time_allowance_in_seconds
     *
     * @param int $time_allowance_in_seconds time_allowance_in_seconds
     *
     * @return $this
     */
    public function setTimeAllowanceInSeconds($time_allowance_in_seconds)
    {
        $this->container['time_allowance_in_seconds'] = $time_allowance_in_seconds;

        return $this;
    }

    /**
     * Gets epoch_earliest_activation
     *
     * @return int
     */
    public function getEpochEarliestActivation()
    {
        return $this->container['epoch_earliest_activation'];
    }

    /**
     * Sets epoch_earliest_activation
     *
     * @param int $epoch_earliest_activation epoch_earliest_activation
     *
     * @return $this
     */
    public function setEpochEarliestActivation($epoch_earliest_activation)
    {
        $this->container['epoch_earliest_activation'] = $epoch_earliest_activation;

        return $this;
    }

    /**
     * Gets activation_time_allowance_in_seconds
     *
     * @return int
     */
    public function getActivationTimeAllowanceInSeconds()
    {
        return $this->container['activation_time_allowance_in_seconds'];
    }

    /**
     * Sets activation_time_allowance_in_seconds
     *
     * @param int $activation_time_allowance_in_seconds activation_time_allowance_in_seconds
     *
     * @return $this
     */
    public function setActivationTimeAllowanceInSeconds($activation_time_allowance_in_seconds)
    {
        $this->container['activation_time_allowance_in_seconds'] = $activation_time_allowance_in_seconds;

        return $this;
    }

    /**
     * Gets activation_type
     *
     * @return string
     */
    public function getActivationType()
    {
        return $this->container['activation_type'];
    }

    /**
     * Sets activation_type
     *
     * @param string $activation_type activation_type
     *
     * @return $this
     */
    public function setActivationType($activation_type)
    {
        $this->container['activation_type'] = $activation_type;

        return $this;
    }

    /**
     * Gets epoch_earliest_available
     *
     * @return int
     */
    public function getEpochEarliestAvailable()
    {
        return $this->container['epoch_earliest_available'];
    }

    /**
     * Sets epoch_earliest_available
     *
     * @param int $epoch_earliest_available epoch_earliest_available
     *
     * @return $this
     */
    public function setEpochEarliestAvailable($epoch_earliest_available)
    {
        $this->container['epoch_earliest_available'] = $epoch_earliest_available;

        return $this;
    }

    /**
     * Gets epoch_latest_available
     *
     * @return int
     */
    public function getEpochLatestAvailable()
    {
        return $this->container['epoch_latest_available'];
    }

    /**
     * Sets epoch_latest_available
     *
     * @param int $epoch_latest_available epoch_latest_available
     *
     * @return $this
     */
    public function setEpochLatestAvailable($epoch_latest_available)
    {
        $this->container['epoch_latest_available'] = $epoch_latest_available;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param string $notes notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets data_usage_allowance_type
     *
     * @return string
     */
    public function getDataUsageAllowanceType()
    {
        return $this->container['data_usage_allowance_type'];
    }

    /**
     * Sets data_usage_allowance_type
     *
     * @param string $data_usage_allowance_type data_usage_allowance_type
     *
     * @return $this
     */
    public function setDataUsageAllowanceType($data_usage_allowance_type)
    {
        $this->container['data_usage_allowance_type'] = $data_usage_allowance_type;

        return $this;
    }

    /**
     * Gets voice_usage_allowance_type
     *
     * @return string
     */
    public function getVoiceUsageAllowanceType()
    {
        return $this->container['voice_usage_allowance_type'];
    }

    /**
     * Sets voice_usage_allowance_type
     *
     * @param string $voice_usage_allowance_type voice_usage_allowance_type
     *
     * @return $this
     */
    public function setVoiceUsageAllowanceType($voice_usage_allowance_type)
    {
        $this->container['voice_usage_allowance_type'] = $voice_usage_allowance_type;

        return $this;
    }

    /**
     * Gets sms_usage_allowance_type
     *
     * @return string
     */
    public function getSmsUsageAllowanceType()
    {
        return $this->container['sms_usage_allowance_type'];
    }

    /**
     * Sets sms_usage_allowance_type
     *
     * @param string $sms_usage_allowance_type sms_usage_allowance_type
     *
     * @return $this
     */
    public function setSmsUsageAllowanceType($sms_usage_allowance_type)
    {
        $this->container['sms_usage_allowance_type'] = $sms_usage_allowance_type;

        return $this;
    }

    /**
     * Gets epoch_created
     *
     * @return int
     */
    public function getEpochCreated()
    {
        return $this->container['epoch_created'];
    }

    /**
     * Sets epoch_created
     *
     * @param int $epoch_created epoch_created
     *
     * @return $this
     */
    public function setEpochCreated($epoch_created)
    {
        $this->container['epoch_created'] = $epoch_created;

        return $this;
    }

    /**
     * Gets epoch_modified
     *
     * @return int
     */
    public function getEpochModified()
    {
        return $this->container['epoch_modified'];
    }

    /**
     * Sets epoch_modified
     *
     * @param int $epoch_modified epoch_modified
     *
     * @return $this
     */
    public function setEpochModified($epoch_modified)
    {
        $this->container['epoch_modified'] = $epoch_modified;

        return $this;
    }

    /**
     * Gets traffic_policy_id
     *
     * @return int
     */
    public function getTrafficPolicyId()
    {
        return $this->container['traffic_policy_id'];
    }

    /**
     * Sets traffic_policy_id
     *
     * @param int $traffic_policy_id traffic_policy_id
     *
     * @return $this
     */
    public function setTrafficPolicyId($traffic_policy_id)
    {
        $this->container['traffic_policy_id'] = $traffic_policy_id;

        return $this;
    }

    /**
     * Gets network_plan_id
     *
     * @return int
     */
    public function getNetworkPlanId()
    {
        return $this->container['network_plan_id'];
    }

    /**
     * Sets network_plan_id
     *
     * @param int $network_plan_id network_plan_id
     *
     * @return $this
     */
    public function setNetworkPlanId($network_plan_id)
    {
        $this->container['network_plan_id'] = $network_plan_id;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets distributor_ids
     *
     * @return int[]
     */
    public function getDistributorIds()
    {
        return $this->container['distributor_ids'];
    }

    /**
     * Sets distributor_ids
     *
     * @param int[] $distributor_ids distributor_ids
     *
     * @return $this
     */
    public function setDistributorIds($distributor_ids)
    {
        $this->container['distributor_ids'] = $distributor_ids;

        return $this;
    }

    /**
     * Gets inventory_ids
     *
     * @return int[]
     */
    public function getInventoryIds()
    {
        return $this->container['inventory_ids'];
    }

    /**
     * Sets inventory_ids
     *
     * @param int[] $inventory_ids inventory_ids
     *
     * @return $this
     */
    public function setInventoryIds($inventory_ids)
    {
        $this->container['inventory_ids'] = $inventory_ids;

        return $this;
    }

    /**
     * Gets epoch_max_modified
     *
     * @return int
     */
    public function getEpochMaxModified()
    {
        return $this->container['epoch_max_modified'];
    }

    /**
     * Sets epoch_max_modified
     *
     * @param int $epoch_max_modified epoch_max_modified
     *
     * @return $this
     */
    public function setEpochMaxModified($epoch_max_modified)
    {
        $this->container['epoch_max_modified'] = $epoch_max_modified;

        return $this;
    }

    /**
     * Gets time_allowance_duration
     *
     * @return int
     */
    public function getTimeAllowanceDuration()
    {
        return $this->container['time_allowance_duration'];
    }

    /**
     * Sets time_allowance_duration
     *
     * @param int $time_allowance_duration time_allowance_duration
     *
     * @return $this
     */
    public function setTimeAllowanceDuration($time_allowance_duration)
    {
        $this->container['time_allowance_duration'] = $time_allowance_duration;

        return $this;
    }

    /**
     * Gets time_allowance_unit
     *
     * @return string
     */
    public function getTimeAllowanceUnit()
    {
        return $this->container['time_allowance_unit'];
    }

    /**
     * Sets time_allowance_unit
     *
     * @param string $time_allowance_unit time_allowance_unit
     *
     * @return $this
     */
    public function setTimeAllowanceUnit($time_allowance_unit)
    {
        $this->container['time_allowance_unit'] = $time_allowance_unit;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
